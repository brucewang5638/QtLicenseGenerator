name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.1'
        cache: true

    - name: Configure MSVC (Windows)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install OpenSSL (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y libssl-dev

    - name: Build with qmake
      run: |
        qmake QtLicenseGenerator.pro
        make

    - name: Package (Linux)
      if: runner.os == 'Linux'
      run: |
        mkdir -p dist
        cp QtLicenseGenerator dist/
        chmod +x dist/QtLicenseGenerator
        cd dist
        tar -czf QtLicenseGenerator-linux-x64.tar.gz QtLicenseGenerator

    - name: Package (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir dist
        cp release/QtLicenseGenerator.exe dist/
        windeployqt dist/QtLicenseGenerator.exe
        cd dist
        7z a QtLicenseGenerator-windows-x64.zip *

    - name: Upload artifact (Linux)
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v4
      with:
        name: linux-executable
        path: dist/QtLicenseGenerator-linux-x64.tar.gz

    - name: Upload artifact (Windows)
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable
        path: dist/QtLicenseGenerator-windows-x64.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
    - name: Download Linux executable
      uses: actions/download-artifact@v4
      with:
        name: linux-executable
        path: dist

    - name: Download Windows executable
      uses: actions/download-artifact@v4
      with:
        name: windows-executable
        path: dist

    # - name: Download macOS executable
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: macos-executable
    #     path: dist

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: |
          dist/QtLicenseGenerator-linux-x64.tar.gz
          dist/QtLicenseGenerator-windows-x64.zip
        body: |
          ## 🚀 Qt License Generator ${{ github.ref_name }}

          ### 使用说明
          1. 下载对应平台的安装包
          2. 解压后运行 `QtLicenseGenerator` 可执行文件
          3. 使用 GUI 界面生成和管理许可证

          ### 平台支持
          - **Linux** (x64)
          - **Windows** (x64)

          ### 文件列表
          - **QtLicenseGenerator-linux-x64.tar.gz** - Linux 版本
          - **QtLicenseGenerator-windows-x64.zip** - Windows 版本 (包含所有必需的 Qt 运行库)

          ### 技术栈
          - Qt 6.8.1
          - C++
          - qmake 构建系统
        token: ${{ secrets.GITHUB_TOKEN }}
