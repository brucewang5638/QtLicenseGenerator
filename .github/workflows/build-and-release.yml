name: Build and Release

on:
  push:
    branches: [master]
    tags: ['v*']
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
            artifact: QtLicenseGenerator-linux-x64.AppImage
          - os: windows-latest
            name: windows
            artifact: QtLicenseGenerator-windows-x64.zip

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.1'
        cache: true
        setup-python: false

    - name: Install OpenSSL (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y libssl-dev libgl1-mesa-dev

    - name: Install OpenSSL (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install openssl -y
        echo "OPENSSL_ROOT_DIR=$(Get-ChildItem 'C:\Program Files\OpenSSL*' | Select -First 1).FullName" >> $env:GITHUB_ENV

    - name: Setup MSVC
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Build
      run: |
        qmake QtLicenseGenerator.pro
        ${{ runner.os == 'Windows' && 'nmake' || 'make -j$(nproc)' }}

    - name: Package AppImage (Linux)
      if: runner.os == 'Linux'
      run: |
        wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        wget -q https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
        chmod +x linuxdeploy*.AppImage

        mkdir -p AppDir/usr/bin
        cp QtLicenseGenerator AppDir/usr/bin/

        cat > app.desktop <<EOF
        [Desktop Entry]
        Type=Application
        Name=QtLicenseGenerator
        Exec=QtLicenseGenerator
        Icon=app
        Categories=Utility;
        EOF

        export QMAKE=$Qt6_DIR/bin/qmake
        ./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage --desktop-file=app.desktop

        mv QtLicenseGenerator*.AppImage ${{ matrix.artifact }}

    - name: Package ZIP (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir dist
        cp release/QtLicenseGenerator.exe dist/
        windeployqt dist/QtLicenseGenerator.exe --release --no-translations

        if (Test-Path "$env:OPENSSL_ROOT_DIR\bin\*.dll") {
          cp "$env:OPENSSL_ROOT_DIR\bin\libssl*.dll" dist/
          cp "$env:OPENSSL_ROOT_DIR\bin\libcrypto*.dll" dist/
        }

        7z a ${{ matrix.artifact }} ./dist/*

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: ${{ matrix.artifact }}

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "artifacts/**/*"
        generateReleaseNotes: true
        body: |
          ## Qt License Generator ${{ github.ref_name }}

          **Linux**: Download `.AppImage`, `chmod +x`, run directly
          **Windows**: Download `.zip`, extract and run

          Both include all dependencies (Qt + OpenSSL)
